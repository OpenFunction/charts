apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscaler-hpa
  namespace: knative-serving
  labels:
    autoscaling.knative.dev/autoscaler-provider: hpa
    app.kubernetes.io/component: autoscaler-hpa
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.3.2"
    serving.knative.dev/release: "v1.3.2"
    {{- include "knative-serving.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: autoscaler-hpa
      {{- include "knative-serving.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: autoscaler-hpa
        app.kubernetes.io/component: autoscaler-hpa
        app.kubernetes.io/name: knative-serving
        app.kubernetes.io/version: "1.3.2"
        serving.knative.dev/release: "v1.3.2"
        {{- include "knative-serving.labels" . | nindent 8 }}
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: autoscaler-hpa
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: controller
      containers:
      - name: autoscaler-hpa
          # This is the Go import path for the binary that is containerized
          # and substituted here.
        {{- with .Values.hpa.image }}
        image: {{ .repository }}:{{ .tag }}
        {{- end }}
        resources: {{- toYaml .Values.hpa.resources | nindent 10 }}
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/serving
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008


