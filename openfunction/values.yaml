global:
  Dapr:
    enabled: true
  Keda:
    enabled: true
  KnativeServing:
    enabled: true
  TektonPipelines:
    enabled: true
  ShipwrightBuild:
    enabled: true
  Contour:
    enabled: true

config:
  knativeServingConfigFeaturesName: config-features
  knativeServingNamespace: knative-serving
  eventsourceHandlerImage: openfunction/eventsource-handler:v4
  triggerHandlerImage: openfunction/trigger-handler:v4
  daprProxyImage: openfunction/dapr-proxy:v0.1.1
  tracing: |
    enabled: false
    provider:
      name: "skywalking"
      oapServer: "localhost:xxx"
    tags:
      func: function-with-tracing
      layer: faas
      tag1: value1
      tag2: value2
    baggage:
      key: sw8-correlation
      value: "base64(string key):base64(string value),base64(string key2):base64(string value2)"
controllerManager:
  kubeRbacProxy:
    image:
      repository: openfunction/kube-rbac-proxy
      tag: v0.8.0
  openfunction:
    image:
      repository: openfunction/openfunction
      tag: v1.1.1
    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 20Mi
  replicas: 1
kubernetesClusterDomain: cluster.local
managerConfig:
  controllerManagerConfigYaml:
    health:
      healthProbeBindAddress: :8081
    leaderElection:
      leaderElect: true
      resourceName: 79f0111e.openfunction.io
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
metricsService:
  ports:
    - name: https
      port: 8443
      targetPort: https
  type: ClusterIP
webhookService:
  ports:
    - port: 443
      targetPort: 9443
  type: ClusterIP

knative-serving:
  activator:
    activator:
      image:
        repository: openfunction/knative.dev-serving-cmd-activator
  autoscaler:
    autoscaler:
      image:
        repository: openfunction/knative.dev-serving-cmd-autoscaler
  configDeployment:
    queueSidecarImage:
      repository: openfunction/knative.dev-serving-cmd-queue
  controller:
    controller:
      image:
        repository: openfunction/knative.dev-serving-cmd-controller
  domainMapping:
    domainMapping:
      image:
        repository: openfunction/knative.dev-serving-cmd-domain-mapping
  domainmappingWebhook:
    domainmappingWebhook:
      image:
        repository: openfunction/knative.dev-serving-cmd-domain-mapping-webhook
  netContourController:
    controller:
      image:
        repository: openfunction/knative.dev-net-contour-cmd-controller
  defaultDomain:
    job:
      image:
        repository: openfunction/knative.dev-serving-cmd-default-domain
  webhook:
    webhook:
      image:
        repository: openfunction/knative.dev-serving-cmd-webhook
shipwright-build:
  shipwrightBuildController:
    shipwrightBuild:
      image:
        repository: openfunction/shipwright-shipwright-build-controller
      GIT_CONTAINER_IMAGE:
        repository: openfunction/shipwright-io-build-git
      MUTATE_IMAGE_CONTAINER_IMAGE:
        repository: openfunction/shipwright-mutate-image
      BUNDLE_CONTAINER_IMAGE:
        repository: openfunction/shipwright-bundle
      WAITER_CONTAINER_IMAGE:
        repository: openfunction/shipwright-waiter
tekton-pipelines:
  controller:
    tektonPipelinesController:
      image:
        repository: openfunction/tektoncd-pipeline-cmd-controller
      kubeconfigWriterImage:
        repository: openfunction/tektoncd-pipeline-cmd-kubeconfigwriter
      gitImage:
        repository: openfunction/tektoncd-pipeline-cmd-git-init
      entrypointImage:
        repository: openfunction/tektoncd-pipeline-cmd-entrypoint
      nopImage:
        repository: openfunction/tektoncd-pipeline-cmd-nop
      imagedigestExporterImage:
        repository: openfunction/tektoncd-pipeline-cmd-imagedigestexporter
      prImage:
        repository: openfunction/tektoncd-pipeline-cmd-pullrequest-init
      workingdirinitImage:
        repository: openfunction/tektoncd-pipeline-cmd-workingdirinit
      gsutilImage:
        repository: openfunction/cloudsdktool-cloud-sdk
        digest: sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
      shellImage:
        repository: openfunction/distroless-base
        digest: sha256:b16b57be9160a122ef048333c68ba205ae4fe1a7b7cc6a5b289956292ebf45cc
      shellImageWin:
        repository: mcr.microsoft.com/powershell:nanoserver
        digest: sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
    type: ClusterIP
  webhook:
    webhook:
      image:
        repository: openfunction/tektoncd-pipeline-cmd-webhook
keda:
  image:
    keda:
      repository: openfunction/keda
      # Allows people to override tag if they don't want to use the app version
      tag: 2.11.2
    metricsApiServer:
      repository: openfunction/keda-metrics-apiserver
      # Allows people to override tag if they don't want to use the app version
      tag: 2.11.2
    webhooks:
      repository: openfunction/keda-admission-webhooks
      # Allows people to override tag if they don't want to use the app version
      tag: 2.11.2
contour:
  fullnameOverride: "contour"
  namespaceOverride: "projectcontour"
  contour:
    ingressClass:
      name: "contour"
  configInline:
    gateway:
      controllerName: "projectcontour.io/projectcontour/contour"

revisionController:
  enable: false
  image:
    repository: openfunction/revision-controller
    tag: v1.0.0
    pullPolicy: IfNotPresent